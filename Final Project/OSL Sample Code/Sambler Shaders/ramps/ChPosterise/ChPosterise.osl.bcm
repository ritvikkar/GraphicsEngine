<?xml version="1.0" encoding="UTF-8"?>
<material view_color="rgb(0.80000, 0.80000, 0.80000)" sample_lamp="True">
	<nodes>
		<node type="OUTPUT_MATERIAL" loc="300, 300" />
		<node type="BSDF_DIFFUSE" color="rgba(0.80000, 0.80000, 0.80000, 1.0)" roughness="0.0" loc="96, 301" />
		<node type="SCRIPT" mode="INTERNAL" script="0" range="10" color="rgba(1.0, 1.0, 1.0, 1.0)" loc="-88, 284" />
		<node type="TEX_IMAGE" image="file:///home/shane/Projects3D/BlenderLib/OSL-Shaders/combine-multiple/FBImagePlanet/textures-earth/Color Map.jpg" source="FILE" color_space="COLOR" projection="FLAT" loc="-300, 301" />
	</nodes>
	<links>
		<link to="0" input="0" from="1" output="0" />
		<link to="1" input="0" from="2" output="0" />
		<link to="2" input="1" from="3" output="0" />
	</links>
	<scripts>
		<script name="ChPosterise.osl" id="0">
/*<br /> * ChPosterise.osl by Charlie (c)2012<br /> * from https://github.com/sambler/osl-shaders<br /> *<br /> * license: public domain<br /> *<br /> * original script from -<br /> * http://blenderartists.org/forum/showthread.php?270332-OSL-Goodness/page5<br /> *<br /> */<br /><br />#include &quot;stdosl.h&quot;<br /><br />shader posterise(<br />    int Range = 8,<br />    color Color = 1,<br />    output color Output = 0 )<br />{<br /><br />    float posterise(float Value){<br />        if( Range &gt; 1 ) {<br />        return floor(Value * Range) / (Range-1);<br />    }<br />    else if(Range == 1) {<br />         return 0;<br />    }<br />    else  {<br />        return Value;<br />        }<br /><br />    }<br /><br />    Output[0] = posterise(Color[0]);<br />    Output[1] = posterise(Color[1]);<br />    Output[2] = posterise(Color[2]);<br /><br /><br />}<br /><br />
		</script>
	</scripts>
</material>