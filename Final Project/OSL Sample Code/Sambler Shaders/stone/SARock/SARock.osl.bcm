<?xml version="1.0" encoding="UTF-8"?>
<material view_color="rgb(0.80000, 0.80000, 0.80000)" sample_lamp="True">
	<nodes>
		<node type="TEX_COORD" dupli="False" loc="-1049, 175" />
		<node type="BSDF_DIFFUSE" color="rgba(0.80000, 0.80000, 0.80000, 1.0)" roughness="0.0" loc="11, 352" />
		<node type="BUMP" strength="0.79999" loc="-187, 271" />
		<node type="OUTPUT_MATERIAL" loc="233, 348" />
		<node type="MAPPING" translation="Vector(0.0, 0.0, 0.0)" rotation="Vector(0.0, 0.0, 0.0)" scale="Vector(1.0, 1.0, 1.0)" use_min="False" use_max="False" vector="Vector(0.0, 0.0, 0.0)" loc="-799, 253" />
		<node type="SCRIPT" mode="INTERNAL" script="0" vector="Vector(0.0, 0.0, 0.0)" noisebasis="0" scale="2.29500" detail="1.19299" distortion="0.0" s1intensity="0.40000" s1concentration="3.00839" s1colorone="rgba(0.01889, 0.01889, 0.01889, 1.0)" s1colortwo="rgba(0.28900, 0.21999, 0.125, 1.0)" s2intensity="0.30000" s2concentration="3.02839" s2color="rgba(0.63300, 0.55000, 0.32100, 1.0)" s3intensity="0.80000" s3concentration="2.94880" s3color="rgba(0.25999, 0.14900, 0.05950, 1.0)" s4intensity="0.10000" s4concentration="2.03999" s4color="rgba(0.65899, 0.74400, 1.0, 1.0)" s5intensity="0.15000" s5concentration="2.16000" s5color="rgba(1.0, 1.0, 1.0, 1.0)" s6intensity="0.80000" s6concentration="2.05999" s6color="rgba(0.0, 0.0, 0.0, 1.0)" loc="-502, 349" />
	</nodes>
	<links>
		<link to="3" input="0" from="1" output="0" />
		<link to="1" input="0" from="5" output="0" />
		<link to="2" input="1" from="5" output="1" />
		<link to="1" input="2" from="2" output="0" />
		<link to="5" input="0" from="4" output="0" />
		<link to="4" input="0" from="0" output="0" />
	</links>
	<scripts>
		<script name="SARock.osl" id="0">
/*<br /> * SARock.osl by Shane Ambler (c)2012<br /> * from https://github.com/sambler/osl-shaders<br /> *<br /> * license: BSD<br /> *<br /> * based on the cycles node tree by Rasmus Seerup at<br /> * http://materialw.wordpress.com/materials/rock-material/<br /> *<br /> */<br /><br />#include &quot;stdosl.h&quot;<br />#include &quot;node_texture.h&quot;<br /><br />/* noise from node_noise_texture.osl from blender source tree - removed fac and colour*/<br />float rock_noise(point p, string basis, float distortion, float detail)<br />{<br />    point r;<br />    int hard = 0;<br /><br />    if (distortion != 0.0) {<br />        r[0] = noise_basis(p + point(13.5), basis) * distortion;<br />        r[1] = noise_basis(p, basis) * distortion;<br />        r[2] = noise_basis(p - point(13.5), basis) * distortion;<br /><br />        p += r;<br />    }<br /><br />    return noise_turbulence(p, basis, detail, hard);<br />}<br /><br />float SpreadTexture (<br />        vector inVec,<br />        string inBasis,<br />        float inIntensity,<br />        float inConcentration,<br />        float inScale,<br />        float inDetail,<br />        float inDistortion )<br />{<br />    float outFac;<br />    outFac = rock_noise(inVec * inScale, inBasis, inDistortion, inDetail);<br />    outFac = ((floor(outFac-inConcentration + 0.5) + inConcentration) * outFac) * inIntensity;<br />    <br />    return outFac;<br />}<br /><br />shader SARock(<br />        vector Vector = P,<br />        int   NoiseBasis = 0,<br />        float Scale = 2.295,<br />        float Detail = 1.193,<br />        float Distortion = 0.0,<br />        float s1Intensity = 0.4,<br />        float s1Concentration = 3.0084,<br />        color s1ColorOne = color(0.0189),<br />        color s1ColorTwo = color(0.289,0.22,0.125),<br />        float s2Intensity = 0.3,<br />        float s2Concentration = 3.0284,<br />        color s2Color = color(0.633,0.55,0.321),<br />        float s3Intensity = 0.8,<br />        float s3Concentration = 2.9488,<br />        color s3Color = color(0.26,0.149,0.0595),<br />        float s4Intensity = 0.1,<br />        float s4Concentration = 2.04,<br />        color s4Color = color(0.659,0.744,1.0),<br />        float s5Intensity = 0.15,<br />        float s5Concentration = 2.16,<br />        color s5Color = color(1.0),<br />        float s6Intensity = 0.8,<br />        float s6Concentration = 2.06,<br />        color s6Color = color(0.0),<br />        output color Color = color(1),<br />        output float Bump = 0 )<br />{<br />    string Basis = &quot;Perlin&quot;;<br />    float Fac = 0;<br />    <br />    if (NoiseBasis == 1)<br />        Basis = &quot;Voronoi F1&quot;;<br />    else if (NoiseBasis == 2)<br />        Basis = &quot;Voronoi F2&quot;;<br />    else if (NoiseBasis == 3)<br />        Basis = &quot;Voronoi F3&quot;;<br />    else if (NoiseBasis == 4)<br />        Basis = &quot;Voronoi F4&quot;;<br />    else if (NoiseBasis == 5)<br />        Basis = &quot;Voronoi F2-F1&quot;;<br />    else if (NoiseBasis == 6)<br />        Basis = &quot;Voronoi Crackle&quot;;<br />    else if (NoiseBasis == 7)<br />        Basis = &quot;Cell Noise&quot;;<br />    else /* default */<br />        Basis = &quot;Perlin&quot;;<br /><br />    /* stage 1 */<br />    Fac = SpreadTexture(Vector, Basis, <br />            s1Intensity, s1Concentration, <br />            Scale, Detail, Distortion);<br />    Color = mix(s1ColorOne,s1ColorTwo,Fac);<br />    Bump = Fac / 10;<br /><br />    /* stage 1.5 */<br />    Fac = SpreadTexture(Vector, Basis, <br />            0.4, 2.06, <br />            Scale + 29.905, Detail + 2.007, Distortion + 1.4);<br />    Color = mix(Color,s1ColorTwo,Fac);<br />    Bump = Bump + (Fac / 10);<br /><br />    /* stage 2 */<br />    Fac = SpreadTexture(Vector, Basis, <br />            s2Intensity, s2Concentration, <br />            Scale + 7.745, Detail + 0.867, Distortion);<br />    Color = mix(Color,s2Color,Fac);<br />    Bump = Bump + (Fac / 10);<br /><br />    /* stage 2.5*/<br />    Fac = SpreadTexture(Vector, Basis, <br />            0.4, 2.06, <br />            Scale + 28.805, Detail + 1.807, Distortion + 1.4);<br />    Color = mix(Color,s2Color,Fac);<br />    Bump = Bump + (Fac / 10);<br /><br />    /* stage 3 */<br />    Fac = SpreadTexture(Vector, Basis, <br />            s3Intensity, s3Concentration, <br />            Scale + 3.985, Detail + 0.807, Distortion);<br />    Color = mix(Color,s3Color,Fac);<br />    Bump = Bump + (Fac / 10);<br /><br />    /* stage 3.5*/<br />    Fac = SpreadTexture(Vector, Basis, <br />            0.4, 2.06, <br />            Scale + 28.405, Detail + 1.807, Distortion + 1.4);<br />    Color = mix(Color,s3Color,Fac);<br />    Bump = Bump + (Fac / 10);<br /><br />    /* stage 4 */<br />    Fac = SpreadTexture(Vector, Basis, <br />            s4Intensity, s4Concentration, <br />            Scale + 6.617, Detail + 2.349, Distortion + 3.0);<br />    Color = mix(Color,s4Color,Fac);<br />    Bump = Bump + (Fac / 10);<br /><br />    /* stage 4.5*/<br />    Fac = SpreadTexture(Vector, Basis, <br />            0.2, 2.06, <br />            Scale + 27.805, Detail + 1.807, Distortion + 1.0);<br />    Color = mix(Color,s4Color,Fac);<br />    Bump = Bump + (Fac / 10);<br /><br />    /* stage 5 */<br />    Fac = SpreadTexture(Vector, Basis, <br />            s5Intensity, s5Concentration, <br />            Scale + 3.265, Detail + 0.635, Distortion + 1.392);<br />    Color = mix(Color,s5Color,Fac);<br />    Bump = Bump + (Fac / 10);<br /><br />    /* stage 6 */<br />    Fac = SpreadTexture(Vector, Basis, <br />            s6Intensity, s6Concentration, <br />            Scale + 27.705, Detail + 1.807, Distortion + 1.0);<br />    Color = mix(Color,s6Color,Fac);<br />    Bump = Bump + (Fac / 10);<br /><br />}<br /><br />
		</script>
	</scripts>
</material>