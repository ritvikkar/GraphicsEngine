<?xml version="1.0" encoding="UTF-8"?>
<material view_color="rgb(0.80000, 0.80000, 0.80000)" sample_lamp="True">
	<nodes>
		<node type="BSDF_DIFFUSE" color="rgba(0.80000, 0.80000, 0.80000, 1.0)" roughness="0.0" width="150" loc="5, 291" />
		<node type="OUTPUT_MATERIAL" width="140" loc="204, 285" />
		<node type="SCRIPT" mode="INTERNAL" script="0" vector="Vector(0.0, 0.0, 0.0)" number="6" width="140" loc="-177, 281" />
		<node type="TEX_COORD" dupli="False" width="140" loc="-369, 284" />
	</nodes>
	<links>
		<link to="1" input="0" from="0" output="0" />
		<link to="0" input="0" from="2" output="0" />
		<link to="2" input="0" from="3" output="3" />
	</links>
	<scripts>
		<script name="MABStripes.osl" id="0">
/*<br /> * MABStripes.osl by Michel J. Anders (c)2013<br /> * from https://github.com/sambler/osl-shaders<br /> *<br /> * license: gplv3<br /> *<br /> * original script from -<br /> * Open Shading Language for Blender by Michel J. Anders<br /> *<br /> */<br /><br />#include &quot;stdosl.h&quot;<br /><br />shader stripes(<br />    point Vector = P,<br />    int Number = 4,<br /><br />    output float Fac = 0 )<br />{<br />    float x = mod(Vector[0],1);<br /><br />    int i;<br />    for(i=1; i &lt;= Number; i++){<br />        if( x &lt; (float)i/Number ){<br />            Fac = i % 2;<br />            break;<br />        }<br />    }<br />}<br />
		</script>
	</scripts>
</material>