<?xml version="1.0" encoding="UTF-8"?>
<material view_color="rgb(0.80000, 0.80000, 0.80000)" sample_lamp="True">
	<nodes>
		<node type="OUTPUT_MATERIAL" width="140" loc="270, 310" />
		<node type="TEX_CHECKER" color1="rgba(0.90035, 0.90035, 0.90035, 1.0)" color2="rgba(0.00999, 0.00999, 0.00999, 1.0)" scale="8.0" width="140" loc="-109, 306" />
		<node type="BSDF_DIFFUSE" color="rgba(0.80000, 0.80000, 0.80000, 1.0)" roughness="0.0" width="150" loc="74, 306" />
		<node type="SCRIPT" mode="INTERNAL" script="0" vectorin="Vector(0.0, 0.0, 0.0)" from="Vector(0.0, 0.0, 0.0)" to="Vector(0.0, 0.0, 0.0)" angle="40.0" width="201" loc="-349, 301" />
		<node type="TEX_COORD" dupli="False" width="140" loc="-537, 300" />
	</nodes>
	<links>
		<link to="0" input="0" from="2" output="0" />
		<link to="2" input="0" from="1" output="0" />
		<link to="3" input="0" from="4" output="2" />
		<link to="1" input="0" from="3" output="0" />
	</links>
	<scripts>
		<script name="MABVectorRotate.osl" id="0">
/*<br /> * MABVectorRotate.osl by Michel J. Anders (c)2013<br /> * from https://github.com/sambler/osl-shaders<br /> *<br /> * license: gplv3<br /> *<br /> * original script from -<br /> * Open Shading Language for Blender by Michel J. Anders<br /> *<br /> */<br /><br />#include &quot;stdosl.h&quot;<br /><br />shader rotate(<br />    vector VectorIn = 0,<br />    vector From = 0,<br />    vector To = point(0,0,1),<br />    float Angle = 0, // in degrees<br /><br />    output vector VectorOut = 0 )<br />{<br />    VectorOut = rotate(VectorIn, radians(Angle), From, To);<br />}<br />
		</script>
	</scripts>
</material>