<?xml version="1.0" encoding="UTF-8"?>
<material view_color="rgb(0.80000, 0.80000, 0.80000)" sample_lamp="True">
	<nodes>
		<node type="BSDF_DIFFUSE" color="rgba(0.80000, 0.80000, 0.80000, 1.0)" roughness="0.0" width="150" loc="-72, 306" />
		<node type="OUTPUT_MATERIAL" width="140" loc="123, 298" />
		<node type="SCRIPT" mode="INTERNAL" script="0" vector="Vector(0.0, 0.0, 0.0)" limit="0.00100" width="210" loc="-313, 306" />
		<node type="TEX_COORD" dupli="False" width="140" loc="-489, 311" />
	</nodes>
	<links>
		<link to="1" input="0" from="0" output="0" />
		<link to="2" input="0" from="3" output="3" />
		<link to="0" input="0" from="2" output="0" />
	</links>
	<scripts>
		<script name="MABDiminishStripes.osl" id="0">
/*<br /> * MABDiminishStripes.osl by Michel J. Anders (c)2013<br /> * from https://github.com/sambler/osl-shaders<br /> *<br /> * license: gplv3<br /> *<br /> * original script from -<br /> * Open Shading Language for Blender by Michel J. Anders<br /> *<br /> */<br /><br />#include &quot;stdosl.h&quot;<br /><br />shader MABDiminishStripes(<br />    point Vector = P,<br />    float Limit = 0.01,<br /><br />    output float Fac = 0 )<br />{<br />    float x = mod(Vector[0],1)*2;<br />    float dx = 0.5;<br />    float xlimit = dx;<br /><br />    float ActualLimit = Limit&gt;0.001 ? Limit : 0.001;<br />    while( dx &gt;= ActualLimit ){<br />        if( x &lt; xlimit ){<br />            break;<br />        }<br />        Fac = abs(Fac-1);<br />        dx *= 0.75;<br />        xlimit += dx;<br />    }<br />}<br />
		</script>
	</scripts>
</material>