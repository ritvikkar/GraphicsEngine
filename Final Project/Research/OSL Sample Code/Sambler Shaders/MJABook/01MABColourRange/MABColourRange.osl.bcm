<?xml version="1.0" encoding="UTF-8"?>
<material view_color="rgb(0.80000, 0.80000, 0.80000)" sample_lamp="True">
	<nodes>
		<node type="TEX_NOISE" scale="5.0" detail="2.0" distortion="0.0" width="140" loc="-380, 287" />
		<node type="BSDF_DIFFUSE" color="rgba(0.80000, 0.80000, 0.80000, 1.0)" roughness="0.0" width="150" loc="5, 291" />
		<node type="OUTPUT_MATERIAL" width="140" loc="204, 285" />
		<node type="SCRIPT" mode="INTERNAL" script="0" value="0.0" low="0.39999" high="0.51999" lowcolor="rgba(0.0, 0.0, 0.0, 1.0)" midcolor="rgba(0.5, 0.5, 0.5, 1.0)" highcolor="rgba(1.0, 1.0, 1.0, 1.0)" width="144" loc="-186, 293" />
	</nodes>
	<links>
		<link to="2" input="0" from="1" output="0" />
		<link to="3" input="0" from="0" output="1" />
		<link to="1" input="0" from="3" output="0" />
	</links>
	<scripts>
		<script name="MABColourRange.osl" id="0">
/*<br /> * MABColourRange.osl by Michel J. Anders (c)2013<br /> * from https://github.com/sambler/osl-shaders<br /> *<br /> * license: gplv3<br /> *<br /> * original script from -<br /> * Open Shading Language for Blender by Michel J. Anders<br /> *<br /> */<br /><br />#include &quot;stdosl.h&quot;<br /><br />shader MABColourRange(<br />    float Value = 0,<br />    float Low = 0,<br />    float High = 0,<br />    color LowColor = 0,<br />    color MidColor = 0.5, // grey<br />    color HighColor = 1,<br /><br />    output color Color = 0 )<br />{<br />    Color = LowColor;<br />    if( Value &gt;= Low &amp;&amp; Value &lt;= High ){<br />        Color = MidColor;<br />    } else {<br />        if( Value &gt; High ){<br />            Color = HighColor;<br />        }<br />    }<br />}<br />
		</script>
	</scripts>
</material>