<?xml version="1.0" encoding="UTF-8"?>
<material view_color="rgb(0.80000, 0.80000, 0.80000)" sample_lamp="True">
	<nodes>
		<node type="SCRIPT" mode="INTERNAL" script="0" vector="Vector(0.0, 0.0, 0.0)" maxiteration="500" loc="-625, 412" />
		<node type="VALTORGB" interpolation="EASE" fac="0.5" stops="7" stop1="0.0|rgba(1.0, 0.0, 0.0, 1.0)" stop2="0.16818|rgba(1.0, 0.21223, 0.0, 1.0)" stop3="0.32727|rgba(1.0, 1.0, 0.0, 1.0)" stop4="0.5|rgba(0.0, 1.0, 0.0, 1.0)" stop5="0.66818|rgba(0.0, 0.0, 1.0, 1.0)" stop6="0.83636|rgba(0.07036, 0.0, 0.22322, 1.0)" stop7="1.0|rgba(0.27467, 0.0, 1.0, 1.0)" loc="-392, 413" />
		<node type="BSDF_DIFFUSE" color="rgba(0.80000, 0.80000, 0.80000, 1.0)" roughness="0.0" loc="-104, 408" />
		<node type="OUTPUT_MATERIAL" loc="92, 399" />
		<node type="MAPPING" translation="Vector(0.0, 0.0, 0.0)" rotation="Vector(0.0, 0.0, 0.0)" scale="Vector(20.0, 20.0, 20.0)" use_min="False" use_max="False" vector="Vector(0.0, 0.0, 0.0)" loc="-902, 392" />
		<node type="TEX_COORD" dupli="False" loc="-1089, 374" />
	</nodes>
	<links>
		<link to="4" input="0" from="5" output="2" />
		<link to="1" input="0" from="0" output="0" />
		<link to="0" input="0" from="4" output="0" />
		<link to="2" input="0" from="1" output="0" />
		<link to="3" input="0" from="2" output="0" />
	</links>
	<scripts>
		<script name="MRMandelbrot.osl" id="0">
/*<br /> * MRmandelbrot.osl by Shane Ambler<br /> * from https://github.com/sambler/osl-shaders<br /> * <br /> * original script from -<br /> * http://www.renderman.org/RMR/RMRShaders.html<br /> * <br /> * MRmand.sl -- Mandelbrot texture<br /> * <br /> * DESCRIPTION:<br /> * Creates a Mandelbrot set as a texture<br /> *<br /> * PARAMETERS:<br /> * Vector -- texture coordinates<br /> * maxIterations -- maximum loops to calculate the factor<br /> *                  smaller values give less colour variation<br /> *<br /> * HINTS:<br /> * Feed the factor into a colorRamp to control the colour being fed into the next node.<br /> *<br /> * AUTHOR: Michael Rivero<br /> * rivero AT squareusa DOT com <br /> *<br /> * History:<br /> * Created: 12/18/98<br /> * 17/12/2012 - converted to blender osl shader by Shane Ambler<br /> *<br /> */<br /><br /><br />shader MRMandelbrot (<br />        vector Vector = P,<br />        int maxiteration = 500,<br />        output float Fac = 1.0 )<br />{<br />    float lt;<br />    float ls;<br /><br />    /* Map the U and V values to the bounds of the Mandelbrot set. */<br /><br />    ls = mod(Vector[1], 1.0);<br />    lt = mod(Vector[0], 1.0);<br /><br />    float real = ( ls * 3.0 ) - 2.0;<br />    float imag = ( lt * 3.0 ) - 1.5;<br />    float tmpval;<br />    float got_away = 0, iter;<br />    float tempreal, tempimag, Creal, Cimag;<br />    float r2;<br />    Creal = real;<br />    Cimag = imag;<br /><br />    for (iter=0; iter&lt;maxiteration &amp;&amp; got_away == 0; iter+=1)<br />    {<br />        /* z = z^2 + c */<br />        tempreal = real;<br />        tempimag = imag;<br />        real = (tempreal * tempreal) -  (tempimag * tempimag);<br />        imag = 2 * tempreal * tempimag;<br />        real += Creal;<br />        imag += Cimag;<br />        r2 = (real*real) + (imag*imag);<br /><br />        if(r2 &gt;= 4) got_away = 1;<br />    }<br /><br />    Fac = mod((iter / 10), 1.0);<br />    <br />}<br /><br />
		</script>
	</scripts>
</material>