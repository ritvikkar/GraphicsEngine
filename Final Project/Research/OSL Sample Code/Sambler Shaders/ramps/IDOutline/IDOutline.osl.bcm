<?xml version="1.0" encoding="UTF-8"?>
<material view_color="rgb(0.80000, 0.80000, 0.80000)" sample_lamp="True">
	<nodes>
		<node type="OUTPUT_MATERIAL" loc="242, 315" />
		<node type="BSDF_DIFFUSE" color="rgba(0.80000, 0.80000, 0.80000, 1.0)" roughness="0.0" loc="42, 319" />
		<node type="SCRIPT" mode="INTERNAL" script="0" normal="Vector(0.0, 0.0, 0.0)" incidental="Vector(0.0, 0.0, 0.0)" width="0.5" blend="0.19999" maincolor="rgba(0.01999, 0.09000, 0.34999, 1.0)" edgecolor="rgba(0.93000, 0.36599, 0.07999, 1.0)" loc="-167, 306" />
	</nodes>
	<links>
		<link to="0" input="0" from="1" output="0" />
		<link to="1" input="0" from="2" output="0" />
	</links>
	<scripts>
		<script name="IDOutline.osl" id="0">
/*<br /> * IDOutline.osl by Charlie<br /> * from https://github.com/sambler/osl-shaders<br /> *<br /> * http://blenderartists.org/forum/showthread.php?270332-OSL-Goodness/page9<br /> * based on work by <br /> * Ivan DeWolf<br /> *<br /> */<br /><br />#include &quot;stdosl.h&quot;<br /><br />/* {roughly based on}<br /> * IDoutline written by Ivan DeWolf<br /> * it's the valdez algorithm. short and sweet.<br /> * width sets the line width.<br /> */<br />shader outline(<br />    normal Normal = N,<br />    normal Incidental = I,<br />    float Width = 0.5,<br />    float Blend = 0.2,<br />    color MainColor = color(0.0,0.0,0.6),<br />    color EdgeColor = color(1.0,0.0,0.0),<br />    output color Color = 0,<br />    output float MixAmt = 0.0 )<br />{<br />    float wdth = clamp(Width,0.0,1.0); <br />    float smth = clamp(Blend,0.0,1.0); <br />    vector Nn = normalize(-Normal);<br />    vector In = normalize(Incidental);<br />    Nn *= 1-wdth;<br />    MixAmt = smoothstep(-smth,0,dot(Nn,In));<br />    Color = mix(MainColor,EdgeColor,MixAmt); <br />}<br /><br />
		</script>
	</scripts>
</material>